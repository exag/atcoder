"""
2重ループでは間に合わないのでbを固定し考える。

0~Nをbで割ったときの余りは
0,1,2,...b-1,0,1,2,...b-1,0,1,2,...
と周期性がある。

1: 0,1,2,...b-1が何セットあるか
2: 最後のセットがどこで終わるか
考える。

N = d * b + r と表すと、
1はdセットで、最終セットは0,1,2,...rとなる

0,1,2,...b-1 にK以上の数字が何個あるかは、
b個からK-1以下の個数を引けば良いので、
b-K
Kのほうが大きいこともあるので、
max(b-K, 0)

最終セットも同様に考える
"""
N, K = map(int, input().split())

ans = 0
for b in range(1, N+1):
    d, m = divmod(N+1, b)
    k = max(b-K, 0)
    ans += max(k*d, 0)
    # 最初の0は、周期性をうまく扱うための便宜上のもので本当は存在しないので、
    # K=0の場合は1減らす
    if K == 0:
        ans -= 1
    ans += max(m-K, 0)

print(ans)